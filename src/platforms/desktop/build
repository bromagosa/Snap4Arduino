#!/bin/sh

# Particular build script for nwjs.io-based versions.

# First parameter contains the platform name in the form desktop/gnu/32,
# which needs transforming into linux32

platform=`echo $1 | sed 's/gnu/linux/' | sed 's/desktop\///' | sed 's/\///'`

echo
echo "======="
echo "Setting up Node dependencies..."
echo "======="
echo

cp -Rv environments/desktop/node_modules tmp

echo
echo "======="
echo "Setting version name..."
echo "======="
echo

sed -E 's/.*version.*/  "version": "'`cat src\/version`'",/' src/platforms/desktop/root/package.json > tmp/package.json

echo
echo "======="
echo "Asking nwbuilder to build Snap4Arduino for $platform"
echo "======="
echo

rm -rf releases/desktop/Snap4Arduino/$platform
rm -rf releases/$1

#environments/node_modules/nw-builder/bin/nwbuild -v 0.34.5 -p $platform tmp -o releases/desktop
environments/node_modules/nw-builder/bin/nwbuild -p $platform tmp -o releases/desktop
#notes about nodejs and chromium versions:
# Sn4A_v6 used (fixed) 0.34.5 (Chromium 70)
# Sn4A_v7 used (current at the time) 0.60.0 (Chromium 97)
# WindowsCOMxx issue appears in Chromium73 and continue (current version 108)
# The last "smooth" version is nodejs 0.36.0 with Chromium 72.0.3626.121
# But also we have our online version (always using current chromium)
# ===> We implement a workaround for the COMxx issue to continue with latest versions
mkdir -p releases/$1
mv releases/desktop/Snap4Arduino/$platform/* releases/$1
rm -rf releases/desktop/Snap4Arduino

if echo $1 | grep win; then
    if test "$2" = "--makeinstaller"; then
        echo
        echo "======="
        echo "Building Microsoft Windows installer for $platform"
        echo "======="
        echo
        src/platforms/$1/../makeinstaller $1
    fi
elif echo $1 | grep osx; then
    echo
    echo "======="
    echo "Copying OS X .icns files over..."
    echo "======="
    echo
    cp assets/*.icns releases/$1/Snap4Arduino.app/Contents/Resources
    # In old Macs, one needs to disable GPU rendering for Snap4Arduino to work
    echo
    echo "======="
    echo "Copying OS X additional scripts over..."
    echo "======="
    echo
    cp src/platforms/$1/disable_gpu.command releases/$1
elif echo $1 | grep gnu; then
    echo
    echo "======="
    echo "Renaming executable..."
    echo "======="
    echo
    mv releases/$1/Snap4Arduino releases/$1/run
    echo
    echo "======="
    echo "Copying icon files over..."
    echo "======="
    echo
    cp -R assets/icons releases/$1
    echo
    echo "======="
    echo "Copying desktop entry over..."
    echo "======="
    echo
    cp src/platforms/desktop/gnu/Snap4Arduino.desktop releases/$1
    cp src/platforms/desktop/gnu/launcher.sh releases/$1
fi
