<blocks app="Snap4Arduino 1.2.6
, http://snap4arduino.rocks" version="1"><block-definition s="$robot say %&apos;text&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%txt">Hello!</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>text</l></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}&#xD;&#xD;if (text.length &gt; 30) {&#xD;  throw new Error("Please enter text less than 30 characters in length")&#xD;}</l></block><list><block var="text"/></list></block><block s="doRun"><block s="reportJSFunction"><list><l>text</l></list><l>var array = [0xF0, 0x09, 0x00];&#xD;&#xD;for (i = 0; i &lt; text.length; i++) {&#xD;  array.push(text.charCodeAt(i))&#xD;}&#xD;&#xD;array.push(0xF7);&#xD;&#xD;this.arduino.board.sp.write(new Buffer(array))</l></block><list><block var="text"/></list></block></script></block-definition><block-definition s="$robot set melody tempo %&apos;tempo&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n">1.0</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIf"><block s="reportLessThan"><block var="tempo"/><l>0</l></block><script><block s="doSetVar"><l>tempo</l><l>1</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="tempo"/><l>0</l></block><script><block s="doSetVar"><l>tempo</l><l>1</l></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>tempo</l></list><l>var tHigh, tLow;&#xD;&#xD;tmp = Math.floor(tempo * 100);&#xD;&#xD;// frequency bytes&#xD;tLow = tmp &amp; 0xFF;&#xD;tHigh = (tmp &amp; 0xFFFF) &gt;&gt; 8;&#xD; &#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x09, 0x04, tHigh, tLow, 0xF7])) </l></block><list><block var="tempo"/></list></block></script></block-definition><block-definition s="$robot play melody %&apos;$melody&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">green sleeves<options>green sleeves
little lamb
happy birthday
star wars
chariots</options></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list><l>melody</l></list><l>if (melody == "green sleeves") choice = 0x00&#xD;if (melody == "little lamb") choice = 0x01&#xD;if (melody == "happy birthday") choice = 0x02&#xD;if (melody == "star wars") choice = 0x03&#xD;if (melody == "chariots") choice = 0x04
&#xD;&#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x09, 0x01, choice, 0xF7])) </l></block><list><block var="$melody"/></list></block></script></block-definition><block-definition s="$robot play tone %&apos;freuency&apos; Hz for %&apos;duration&apos; ms" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n">2000</input><input type="%s">100</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIf"><block s="reportLessThan"><block var="duration"/><l>0</l></block><script><block s="doSetVar"><l>duration</l><l>0</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="duration"/><l>1000</l></block><script><block s="doSetVar"><l>duration</l><l>1000</l></block></script></block><block s="doIf"><block s="reportLessThan"><block var="freuency"/><l>0</l></block><script><block s="doSetVar"><l>freuency</l><l>0</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="freuency"/><l>5000</l></block><script><block s="doSetVar"><l>freuency</l><l>5000</l></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>frequency</l><l>duration</l></list><l>var fHigh, fLow, dHigh, dLow;&#xD;&#xD;// frequency bytes&#xD;fLow = frequency &amp; 0xFF;&#xD;fHigh = (frequency &amp; 0xFFFF) &gt;&gt; 8;&#xD;&#xD;// duration bytes&#xD;&#xD;dLow = duration &amp; 0xFF;&#xD;&#xD;dHigh = (duration &amp; 0xFFFF) &gt;&gt; 8;&#xD;&#xD;&#xD; &#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x09, 0x03, fHigh, fLow, dHigh, dLow, 0xF7])) </l></block><list><block var="freuency"/><block var="duration"/></list></block></script></block-definition><block-definition s="$robot play your melody, notes: %&apos;melody&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%mult%txt"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list><l>melody</l></list><l>var array = [0xF0, 0x09, 0x02];&#xD;&#xD;&#xD;&#xD;var notes = {};&#xD;&#xD;&#xD;&#xD;notes["RST"] = 0;&#xD;&#xD;&#xD;&#xD;notes["C1"] =  33;&#xD;&#xD;notes["CS1"] = 35;&#xD;&#xD;notes["D1"] =  37;&#xD;&#xD;notes["DS1"] = 39;&#xD;&#xD;notes["E1"] =  41;&#xD;&#xD;notes["F1"] =  44;&#xD;&#xD;notes["FS1"] = 46;&#xD;&#xD;notes["G1"] =  49;&#xD;&#xD;notes["GS1"] = 52;&#xD;&#xD;notes["A1"] =  55;&#xD;&#xD;notes["AS1"] = 58;&#xD;&#xD;notes["B1"] =  62;&#xD;&#xD;notes["C2"] =  65;&#xD;&#xD;notes["CS2"] = 69;&#xD;&#xD;notes["D2"] =  73;&#xD;&#xD;notes["DS2"] = 78;&#xD;&#xD;notes["E2"] =  82;&#xD;&#xD;notes["F2"] =  87;&#xD;&#xD;notes["FS2"] = 93;&#xD;&#xD;notes["G2"] =  98;&#xD;&#xD;notes["GS2"] = 104;&#xD;&#xD;notes["A2"] =  110;&#xD;&#xD;notes["AS2"] = 117;&#xD;&#xD;notes["B2"] =  123;&#xD;&#xD;notes["C3"] =  131;&#xD;&#xD;notes["CS3"] = 139;&#xD;&#xD;notes["D3"] =  147;&#xD;&#xD;notes["DS3"] = 156;&#xD;&#xD;notes["E3"] =  165;&#xD;&#xD;notes["F3"] =  175;&#xD;&#xD;notes["FS3"] = 185;&#xD;&#xD;notes["G3"] =  196;&#xD;&#xD;notes["GS3"] = 208;&#xD;&#xD;notes["A3"] =  220;&#xD;&#xD;notes["AS3"] = 233;&#xD;&#xD;notes["B3"] =  248;&#xD;&#xD;notes["C4"] =  262;&#xD;&#xD;notes["CS4"] = 277;&#xD;&#xD;notes["D4"] =  294;&#xD;&#xD;notes["DS4"] = 311;&#xD;&#xD;notes["E4"] =  330;&#xD;&#xD;notes["F4"] =  349;&#xD;&#xD;notes["FS4"] = 370;&#xD;&#xD;notes["G4"] =  392;&#xD;&#xD;notes["GS4"] = 415;&#xD;&#xD;notes["A4"] =  440;&#xD;&#xD;notes["AS4"] = 466;&#xD;&#xD;notes["B4"] =  494;&#xD;&#xD;notes["C5"] =  523;&#xD;&#xD;notes["CS5"] = 554;&#xD;&#xD;notes["D5"] =  587;&#xD;&#xD;notes["DS5"] = 622;&#xD;&#xD;notes["E5"] =  659;&#xD;&#xD;notes["F5"] =  698;&#xD;&#xD;notes["FS5"] = 740;&#xD;&#xD;notes["G5"] =  784;&#xD;&#xD;notes["GS5"] = 831;&#xD;&#xD;notes["A5"] =  880;&#xD;&#xD;notes["AS5"] = 932;&#xD;&#xD;notes["B5"] =  988;&#xD;&#xD;notes["C6"] =  1047;&#xD;&#xD;notes["CS6"] = 1109;&#xD;&#xD;notes["D6"] =  1175;&#xD;&#xD;notes["DS6"] = 1245;&#xD;&#xD;notes["E6"] =  1319;&#xD;&#xD;notes["F6"] =  1397;&#xD;&#xD;notes["FS6"] = 1480;&#xD;&#xD;notes["G6"] =  1568;&#xD;&#xD;notes["GS6"] = 1661;&#xD;&#xD;notes["A6"] =  1760;&#xD;&#xD;notes["AS6"] = 1865;&#xD;&#xD;notes["B6"] =  1976;&#xD;&#xD;notes["C7"] =  2093;&#xD;&#xD;notes["CS7"] = 2217;&#xD;&#xD;notes["D7"] =  2349;&#xD;&#xD;notes["DS7"] = 2489;&#xD;&#xD;notes["E7"] =  2637;&#xD;&#xD;notes["F7"] =  2794;&#xD;&#xD;notes["FS7"] = 2960;&#xD;&#xD;notes["G7"] =  3136;&#xD;&#xD;notes["GS7"] = 3322;&#xD;&#xD;notes["A7"] =  3520;&#xD;&#xD;notes["AS7"] = 3729;&#xD;&#xD;notes["B7"] =  3951;&#xD;&#xD;notes["C8"] =  4186;&#xD;&#xD;notes["CS8"] = 4435;&#xD;&#xD;notes["D8"] =  4699;&#xD;&#xD;notes["DS8"] = 4978;&#xD;&#xD;&#xD;&#xD;var note, frequency, duration, res;&#xD;&#xD;&#xD;&#xD;melody.asArray().forEach(addNote);&#xD;&#xD;	&#xD;&#xD;&#xD;array.push(0xF7);&#xD;&#xD;this.arduino.board.sp.write(new Buffer(array)) &#xD;&#xD;function addNote(item){&#xD;&#xD;  var res = item.split(".");&#xD;&#xD;        &#xD;&#xD;  var frequency = notes[res[0]];&#xD;&#xD;  var duration = res[1];&#xD;&#xD;        &#xD;&#xD;  // frequency bytes&#xD;&#xD;  var fLow = frequency &amp; 0xFF;&#xD;&#xD;  var fHigh = (frequency &amp; 0xFFFF) &gt;&gt; 8;&#xD;&#xD;&#xD;&#xD;  array.push(fHigh);&#xD;&#xD;  array.push(fLow);&#xD;&#xD;  array.push(duration);&#xD;&#xD;}</l></block><list><block var="melody"/></list></block></script></block-definition><block-definition s="$robot swing arms %&apos;state&apos; speed %&apos;speed&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%n">2</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIf"><block s="reportLessThan"><block var="speed"/><l>0</l></block><script><block s="doSetVar"><l>speed</l><l>0</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="speed"/><l>10</l></block><script><block s="doSetVar"><l>speed</l><l>10</l></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>state</l><l>speed</l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0B, speed, state, 0xF7]))</l></block><list><block var="state"/><block var="speed"/></list></block></script></block-definition><block-definition s="$robot set left arm %&apos;leftdegrees&apos; degrees" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n">0</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="servoWrite"><l>4</l><l><option>disconnected</option></l></block><block s="doIfElse"><block s="reportLessThan"><block s="reportMonadic"><l><option>abs</option></l><block var="leftdegrees"/></block><l>91</l></block><script><block s="servoWrite"><l>4</l><block s="reportDifference"><l>90</l><block var="leftdegrees"/></block></block></script><script><block s="doRun"><block s="reportJSFunction"><list></list><l>throw new Error("Please enter a number between -90 and 90");&#xD;</l></block><list><l></l><l></l></list></block></script></block></script></block-definition><block-definition s="$robot set right arm %&apos;rightdegrees&apos; degrees" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n">0</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload cre_firmata_1.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="servoWrite"><l>5</l><l><option>disconnected</option></l></block><block s="doIfElse"><block s="reportLessThan"><block s="reportMonadic"><l><option>abs</option></l><block var="rightdegrees"/></block><l>91</l></block><script><block s="servoWrite"><l>5</l><block s="reportSum"><l>90</l><block var="rightdegrees"/></block></block></script><script><block s="doRun"><block s="reportJSFunction"><list></list><l>throw new Error("Please enter a number between -90 and 90");&#xD;</l></block><list><l></l><l></l></list></block></script></block></script></block-definition><block-definition s="$robot stop arms" type="command" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0B, 0, 0, 0xF7]))</l></block><list></list></block><block s="servoWrite"><l>4</l><l><option>disconnected</option></l></block><block s="doWait"><l>0.01</l></block><block s="servoWrite"><l>5</l><l><option>disconnected</option></l></block></script></block-definition><block-definition s="$robot look around %&apos;state&apos; speed %&apos;speed&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%n">2</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIf"><block s="reportLessThan"><block var="speed"/><l>0</l></block><script><block s="doSetVar"><l>speed</l><l>0</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="speed"/><l>5</l></block><script><block s="doSetVar"><l>speed</l><l>5</l></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>state</l><l>speed</l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0C, speed, state, 0xF7]))</l></block><list><block var="state"/><block var="speed"/></list></block></script></block-definition><block-definition s="$robot set head %&apos;headpos&apos; degrees" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s">0</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="servoWrite"><l>6</l><l><option>disconnected</option></l></block><block s="doIfElse"><block s="reportLessThan"><block s="reportMonadic"><l><option>abs</option></l><block var="headpos"/></block><l>51</l></block><script><block s="servoWrite"><l>6</l><block s="reportSum"><l>90</l><block var="headpos"/></block></block></script><script><block s="doRun"><block s="reportJSFunction"><list></list><l>throw new Error("Please enter a number between -50 and 50");&#xD;</l></block><list><l></l><l></l></list></block></script></block></script></block-definition><block-definition s="$robot stop head" type="command" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0C, 0, 0, 0xF7]))</l></block><list></list></block><block s="servoWrite"><l>6</l><l><option>disconnected</option></l></block></script></block-definition><block-definition s="$robot LED display image %&apos;image&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true">smile<options>smile
neutral
frown
question
ok
tick
cross
rock
paper
sissors
heart
quaver
quaverx2
blank</options></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list><l>image</l></list><l>if (image == "smile") choice = 0x00
&#xD;if (image == "neutral") choice = 0x01&#xD;if (image == "frown") choice = 0x02&#xD;if (image == "question") choice = 0x03&#xD;if (image == "ok") choice = 0x04&#xD;if (image == "tick") choice = 0x05 &#xD;if (image == "cross") choice = 0x06&#xD;if (image == "rock") choice = 0x07&#xD;if (image == "paper")
choice = 0x08&#xD;if (image == "sissors") choice = 0x09 
&#xD;if (image == "heart") choice = 0x0A&#xD;if (image == "quaver") choice = 0x0B
&#xD;if (image == "quaverx2") choice = 0x0C
&#xD;if (image == "blank") choice = 0x0D&#xD;&#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x0A, 0x01, choice, 0xF7])) </l></block><list><block var="image"/></list></block></script></block-definition><block-definition s="$robot LED display scroll text %&apos;text&apos; %&apos;state&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%b"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>text</l></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><block var="text"/></list></block><block s="doRun"><block s="reportJSFunction"><list><l>text</l><l>state</l></list><l>var array = [0xF0, 0x0A, 0x02, state];&#xD;&#xD;if (text.length &gt; 30) {
&#xD;  throw new Error("Please enter text less than 30 characters in length")
&#xD;} else {&#xD;&#xD;  for (i = 0; i &lt; text.length; i++) {&#xD;    array.push(text.charCodeAt(i))&#xD;  }&#xD;&#xD;  array.push(0xF7);&#xD;}&#xD;&#xD;this.arduino.board.sp.write(new Buffer(array))</l></block><list><block var="text"/><block var="state"/></list></block></script></block-definition><block-definition s="$robot LED display number %&apos;number&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIfElse"><block s="reportAnd"><block s="reportGreaterThan"><block var="number"/><l>-1</l></block><block s="reportLessThan"><block var="number"/><l>100</l></block></block><script><block s="doRun"><block s="reportJSFunction"><list><l>number</l></list><l>if (number &gt;= 0 &amp;&amp; number &lt;= 99){&#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x0A, 0x03, number, 0xF7]))&#xD;} </l></block><list><block var="number"/></list></block></script><script><block s="doRun"><block s="reportJSFunction"><list></list><l>throw new Error("Please enter a number between 0 and 99");
</l></block><list><l></l><l></l></list></block></script></block></script></block-definition><block-definition s="$robot LED display clear" type="command" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list><l></l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0A, 0x06, 0xF7])) </l></block><list><l></l></list></block></script></block-definition><block-definition s="$robot set LED display rows 0x %&apos;hex&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}&#xD;</l></block><list></list></block><block s="doRun"><block s="reportJSFunction"><list><l>hex</l></list><l>var array = [0xF0, 0x0A, 0x04];&#xD;&#xD;if (hex.length != 16){&#xD;  throw new Error("Please enter 16 hex digits")&#xD;} else {&#xD;&#xD;  for (i = 0; i &lt; hex.length; i += 2) {&#xD;    array.push(parseInt(hex.substr(i, 2), 16))&#xD;  }&#xD;&#xD;  array.push(0xF7);&#xD;&#xD;  this.arduino.board.sp.write(new Buffer(array))&#xD;}</l></block><list><block var="hex"/></list></block></script></block-definition><block-definition s="$robot set LED display pixel R: %&apos;row&apos; C: %&apos;column&apos; %&apos;state&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input><input type="%b"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIfElse"><block s="reportAnd"><block s="reportAnd"><block s="reportGreaterThan"><block var="row"/><l>-1</l></block><block s="reportLessThan"><block var="row"/><l>8</l></block></block><block s="reportAnd"><block s="reportGreaterThan"><block var="column"/><l>-1</l></block><block s="reportLessThan"><block var="column"/><l>8</l></block></block></block><script><block s="doRun"><block s="reportJSFunction"><list><l>row</l><l>column</l><l>state</l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0A, 0x05, row, column, state, 0xF7]))</l></block><list><block var="row"/><block var="column"/><block var="state"/></list></block></script><script><block s="doRun"><block s="reportJSFunction"><list></list><l>throw new Error("Please enter a row and column values between 0 and 7");
</l></block><list><l></l><l></l></list></block></script></block></script></block-definition><block-definition s="$robot set eyes $pipette red %&apos;red&apos; green %&apos;green&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%b"><options>red
yellow
green</options></input><input type="%b"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="digitalWrite"><l>8</l><block var="green"/></block><block s="digitalWrite"><l>9</l><block var="red"/></block></script></block-definition><block-definition s="$robot set mouth $pipette red %&apos;red&apos; green %&apos;green&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%b"><options>red
yellow
green</options></input><input type="%b"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="digitalWrite"><l>14</l><block var="red"/></block><block s="digitalWrite"><l>15</l><block var="green"/></block></script></block-definition><block-definition s="$robot set left wheel velocity %&apos;leftspeed&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doSetVar"><l>leftspeed</l><block s="reportSum"><l>90</l><block var="leftspeed"/></block></block><block s="doIf"><block s="reportLessThan"><block var="leftspeed"/><l>0</l></block><script><block s="doSetVar"><l>leftspeed</l><l>0</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="leftspeed"/><l>180</l></block><script><block s="doSetVar"><l>leftspeed</l><l>180</l></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>leftspeed</l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0E, leftspeed, 0x00, 0xF7]))</l></block><list><block var="leftspeed"/></list></block></script></block-definition><block-definition s="$robot set right wheel velocity %&apos;rightspeed&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doSetVar"><l>rightspeed</l><block s="reportDifference"><l>90</l><block var="rightspeed"/></block></block><block s="doIf"><block s="reportLessThan"><block var="rightspeed"/><l>0</l></block><script><block s="doSetVar"><l>rightspeed</l><l>0</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="rightspeed"/><l>180</l></block><script><block s="doSetVar"><l>rightspeed</l><l>180</l></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>rightspeed</l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0E, 0x00, rightspeed, 0xF7]))</l></block><list><block var="rightspeed"/></list></block></script></block-definition><block-definition s="$robot stop wheels" type="command" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x0E, 0x5A, 0x5A, 0xF7]))</l></block><list></list></block></script></block-definition><block-definition s="$robot user reply" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doDeclareVariables"><list><l>count</l></list></block><block s="doDeclareVariables"><list><l>range</l></list></block><block s="doSetVar"><l>count</l><l>0</l></block><block s="doRepeat"><l>1</l><script><block s="doSetVar"><l>range</l><custom-block s="$robot ultrasound distance reading"></custom-block></block><block s="doIf"><block s="reportAnd"><block s="reportGreaterThan"><block var="range"/><l>0</l></block><block s="reportLessThan"><block var="range"/><l>15</l></block></block><script><block s="doChangeVar"><l>count</l><l>1</l></block></script></block></script></block><block s="doIf"><block s="reportEquals"><block var="count"/><l>1</l></block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block-definition><block-definition s="$robot ultrasound distance reading" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context&#xD;&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {&#xD;&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");&#xD;&#xD;}</l></block><list><l></l><l></l></list></block><block s="doRun"><block s="reportJSFunction"><list></list><l>var myself = this;&#xD;this.arduino.ultrasoundValue = null;&#xD;this.arduino.board.once(&apos;string&apos;, function(data){ myself.arduino.ultrasoundValue = parseFloat(data) });&#xD;this.arduino.board.sp.write(new Buffer([0xF0, 0x08, 0xF7]));</l></block><list></list></block><block s="doWaitUntil"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return (this.arduino.ultrasoundValue != null)</l></block><list></list></block></block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.arduino.ultrasoundValue</l></block><list></list></block></block></script></block-definition><block-definition s="$robot read line sensor %&apos;sensor&apos;" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"><options>1
2
3
4
5</options></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIf"><block s="reportAnd"><block s="reportGreaterThan"><block var="sensor"/><l>0</l></block><block s="reportLessThan"><block var="sensor"/><l>6</l></block></block><script><block s="doIf"><block s="reportGreaterThan"><block s="reportAnalogReading"><block s="reportSum"><block var="sensor"/><l>1</l></block></block><l>900</l></block><script><block s="doReport"><l>1</l></block></script></block><block s="doReport"><l>0</l></block></script></block><block s="doReport"><l>Please input a sensor number between 1 and 5</l></block></script></block-definition><block-definition s="$robot line position with %&apos;sensors&apos; sensors" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%n"><options>3
5</options></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}</l></block><list><l></l><l></l></list></block><block s="doIfElse"><block s="reportOr"><block s="reportEquals"><block var="sensors"/><l>3</l></block><block s="reportEquals"><block var="sensors"/><l>5</l></block></block><script><block s="doRun"><block s="reportJSFunction"><list><l>L1</l><l>L2</l><l>L3</l><l>L4</l><l>L5</l><l>sensors</l></list><l>var myself = this;&#xD;var position = 0, online = 0, readline = 0;&#xD;var linesensor = [L1, L2, L3, L4, L5];&#xD;var centre;&#xD;&#xD;if (sensors == 3) centre = 2;
&#xD;if (sensors == 5) centre = 3;&#xD;&#xD;for (i = 0; i &lt; sensors; i++) {&#xD;  if (linesensor[i] == 0) {&#xD;    online = online + 1;&#xD;    position = position + (i+1);&#xD;  }&#xD;}&#xD;&#xD;switch (online){&#xD;  case 0: this.arduino.readline = sensors + 1;&#xD;    break;&#xD;  case sensors: this.arduino.readline = sensors;&#xD;    break; &#xD;  default: this.arduino.readline = (position / online) - centre;&#xD;}  &#xD;</l></block><list><custom-block s="$robot read line sensor %n"><l>1</l></custom-block><custom-block s="$robot read line sensor %n"><l>2</l></custom-block><custom-block s="$robot read line sensor %n"><l>3</l></custom-block><custom-block s="$robot read line sensor %n"><l>4</l></custom-block><custom-block s="$robot read line sensor %n"><l>5</l></custom-block><block var="sensors"/></list></block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.arduino.readline</l></block><list></list></block></block></script><script><block s="doReport"><l>number of line sensors should be 3 or 5</l></block></script></block></script></block-definition><block-definition s="$robot change robots BlueTooth name to: %&apos;text&apos;" type="command" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>text</l></list><l>board = this.arduino.board; //Definition should change according to the context
&#xD;if (board.pins[3].supportedModes.indexOf(0x05) === -1) {
&#xD;  throw new Error("Please upload CRE_Firmata.ino to your Arduino");
&#xD;}&#xD;&#xD;if (text.length &gt; 10) {&#xD;  throw new Error("Please enter text less than 10 characters in length")&#xD;}</l></block><list><block var="text"/></list></block><block s="doRun"><block s="reportJSFunction"><list><l>text</l></list><l>var array = [0xF0, 0x0D, 01];&#xD;&#xD;for (i = 0; i &lt; text.length; i++) {&#xD;  array.push(text.charCodeAt(i))&#xD;}&#xD;&#xD;array.push(0xF7);&#xD;&#xD;this.arduino.board.sp.write(new Buffer(array))</l></block><list><block var="text"/></list></block><block s="disconnectArduino"></block><block s="doWait"><l>8</l></block><block s="bubble"><l>Your robot now has a new name!</l></block></script></block-definition></blocks>
