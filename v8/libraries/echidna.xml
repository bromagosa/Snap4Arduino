<blocks app="Snap4Arduino 6.1.2.-1
, http://snap4arduino.rocks" version="1"><block-definition s="$🅴-1.5-230-106-0 set LED %&apos;color&apos; to %&apos;state&apos;" type="command" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 posa el LED _ a _&#xD;es:$🅴-1.5-230-106-0 fija el LED _ a _&#xD;</translations><inputs><input type="%s" readonly="true">🔴<options>🔴&#xD;🍊&#xD;🍏</options></input><input type="%b"></input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="doDeclareVariables"><list><l>pin</l></list></block><block s="doSetVar"><l>pin</l><l>0</l></block><block s="doIf"><block s="reportEquals"><block var="color"/><l>🔴</l></block><script><block s="doSetVar"><l>pin</l><l>13</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="color"/><l>🍊</l></block><script><block s="doSetVar"><l>pin</l><l>12</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="color"/><l>🍏</l></block><script><block s="doSetVar"><l>pin</l><l>11</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="pin"/><l>0</l></block><script><block s="digitalWrite"><block var="pin"/><block var="state"/></block></script></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 set LED $R-1-255-0-0 $G-1-0-255-0 $B-1-0-0-255 to $nl $R:-1-255-0-0 %&apos;red&apos; $G:-1-0-255-0 %&apos;green&apos; $B:-1-0-0-255 %&apos;blue&apos;" type="command" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 posa el LED $R-1-255-0-0 $G-1-0-255-0 $B-1-0-0-255 a _ $R:-1-255-0-0 _ $G:-1-0-255-0 _ $B:-1-0-0-255 _&#xD;es:$🅴-1.5-230-106-0 fija el LED $R-1-255-0-0 $G-1-0-255-0 $B-1-0-0-255 a _ $R:-1-255-0-0 _ $G:-1-0-255-0 _ $B:-1-0-0-255 _&#xD;</translations><inputs><input type="%n">255</input><input type="%n">255</input><input type="%n">255</input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="pwmWrite"><l>9</l><block var="red"/></block><block s="pwmWrite"><l>5</l><block var="green"/></block><block s="pwmWrite"><l>6</l><block var="blue"/></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 tone %&apos;freq&apos; Hz for %&apos;dur&apos; ms" type="command" category="arduino"><comment x="0" y="0" w="619.0000000000001" collapsed="false">Play sound of selected frequenzy (Hz) during a time (miliseconds value) using a buzzer on the selected pin.&#xD;&#xD;-Frequency. Accept values from 0 to 65535 Hz, but real operation range is 32-16000Hz.&#xD;-Duration. Accept values up to 60000ms.&#xD;-Default pin is 14 (A0), ready to Imagina shield.</comment><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 to _ Hz durant _ ms&#xD;es:$🅴-1.5-230-106-0 tono _ Hz durante _ ms&#xD;</translations><inputs><input type="%n">440</input><input type="%n">100</input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="doRun"><block s="reportJSFunction"><list><l>pin</l><l>freq</l><l>dur</l></list><l>if (!this.arduino.isBoardReady()) {&#xD;    throw new Error("Arduino not connected");&#xD;}&#xD;if (this.arduino.board.pins[5].supportedModes.indexOf(0x05) === -1) {&#xD;    throw new Error("This block needs a device running SA5Firmata_tone or SA5Firmata_ir firmware");&#xD;}&#xD;&#xD;var board = this.arduino.board;&#xD;if (pin === undefined || freq === undefined || pin &lt;= 1 || pin &gt; 255 || freq &lt; 0 || freq &gt; 65535) {&#xD;  throw new Error("Required var pin (2-255) and frequency (0-65535)");&#xD;}&#xD;var dur = dur || 0;&#xD;dur = dur &amp; 0xFFFF; //clamping value to 32 bits&#xD;var data =[0xF0, //START_SYSEX&#xD;      		0xC7,  //Tone Command&#xD;      		(dur &gt;&gt; 25) &amp; 0x7F,&#xD;      		(dur &gt;&gt; 18) &amp; 0x7F,&#xD;      		(dur &gt;&gt; 11) &amp; 0x7F,&#xD;      		(dur &gt;&gt; 4) &amp; 0x7F,&#xD;      		((dur &lt;&lt; 3) &amp; parseInt("01111000",2)) | ((freq &gt;&gt; 13) &amp; parseInt("0111",2)),&#xD;      		(freq &gt;&gt; 6) &amp; 0x7F,&#xD;      		((freq &lt;&lt; 1) &amp; parseInt("01111110",2)) | ((pin &gt;&gt; 7) &amp; parseInt("01",2)),&#xD;        pin &amp; 0x7F,&#xD;      		0xF7  //END_SYSEX&#xD;];&#xD;board.transport.write(new Buffer(data));</l></block><list><l>10</l><block var="freq"/><block var="dur"/></list></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 beep for %&apos;time&apos; ms" type="command" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 beep durant _ ms&#xD;es:$🅴-1.5-230-106-0 beep durante _ ms&#xD;</translations><inputs><input type="%n">100</input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="pwmWrite"><l>10</l><l>128</l></block><block s="doWait"><block s="reportQuotient"><block var="time"/><l>1000</l></block></block><block s="digitalWrite"><l>10</l><l><bool>false</bool></l></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 %&apos;SX&apos; ?" type="predicate" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">SR<options>SR-D2=SR&#xD;SL-D3=SL</options></input></inputs><script><block s="doIfElse"><block s="reportConnected"></block><script><block s="doDeclareVariables"><list><l>pin</l></list></block><block s="doSetVar"><l>pin</l><l>0</l></block><block s="doIf"><block s="reportEquals"><block var="SX"/><l>SR</l></block><script><block s="doSetVar"><l>pin</l><l>2</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="SX"/><l>SL</l></block><script><block s="doSetVar"><l>pin</l><l>3</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="pin"/><l>0</l></block><script><block s="doReport"><block s="reportDigitalReading"><block var="pin"/></block></block></script></block></script><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 joystick %&apos;direction&apos; ?" type="predicate" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">➡️<options>➡️&#xD;⬅️&#xD;⬆️&#xD;⬇️&#xD;🔘</options></input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="doIf"><block s="reportEquals"><block var="direction"/><l>➡️</l></block><script><block s="doReport"><block s="reportLessThan"><l>623</l><block s="reportAnalogReading"><l>0</l></block></block></block></script></block><block s="doIf"><block s="reportEquals"><block var="direction"/><l>⬅️</l></block><script><block s="doReport"><block s="reportLessThan"><block s="reportAnalogReading"><l>0</l></block><l>400</l></block></block></script></block><block s="doIf"><block s="reportEquals"><block var="direction"/><l>⬆️</l></block><script><block s="doReport"><block s="reportLessThan"><l>623</l><block s="reportAnalogReading"><l>1</l></block></block></block></script></block><block s="doIf"><block s="reportEquals"><block var="direction"/><l>⬇️</l></block><script><block s="doReport"><block s="reportLessThan"><block s="reportAnalogReading"><l>1</l></block><l>400</l></block></block></script></block><block s="doIf"><block s="reportEquals"><block var="direction"/><l>🔘</l></block><script><block s="doReport"><block s="reportDigitalReading"><l>2</l></block></block></script></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 joystick %&apos;xy&apos;" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">x<options>x&#xD;y</options></input></inputs><script><block s="doIfElse"><block s="reportConnected"></block><script><block s="doDeclareVariables"><list><l>pin</l><l>value</l></list></block><block s="doSetVar"><l>pin</l><l>2</l></block><block s="doIf"><block s="reportEquals"><block var="xy"/><l>x</l></block><script><block s="doSetVar"><l>pin</l><l>0</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="xy"/><l>y</l></block><script><block s="doSetVar"><l>pin</l><l>1</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><l>2</l><block var="pin"/></block><script><block s="doSetVar"><l>value</l><block s="reportAnalogReading"><block var="pin"/></block></block><block s="doIfElse"><block s="reportGreaterThan"><block var="value"/><l>588</l></block><script><block s="doReport"><block s="reportRound"><block s="reportQuotient"><block s="reportDifference"><block var="value"/><l>588</l></block><l>4.35</l></block></block></block></script><script><block s="doIfElse"><block s="reportGreaterThan"><l>435</l><block var="value"/></block><script><block s="doReport"><block s="reportRound"><block s="reportQuotient"><block s="reportDifference"><block var="value"/><l>435</l></block><l>4.35</l></block></block></block></script><script><block s="doReport"><l>0</l></block></script></block></script></block></script></block></script><script><block s="doReport"><l>0</l></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 accel %&apos;xy&apos;" type="reporter" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">x<options>x&#xD;y</options></input></inputs><script><block s="doIfElse"><block s="reportConnected"></block><script><block s="doDeclareVariables"><list><l>pin</l><l>value</l></list></block><block s="doSetVar"><l>pin</l><l>1</l></block><block s="doIf"><block s="reportEquals"><block var="xy"/><l>x</l></block><script><block s="doSetVar"><l>pin</l><l>2</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="xy"/><l>y</l></block><script><block s="doSetVar"><l>pin</l><l>3</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="pin"/><l>1</l></block><script><block s="doSetVar"><l>value</l><block s="reportAnalogReading"><block var="pin"/></block></block><block s="doIfElse"><block s="reportGreaterThan"><block var="value"/><l>364</l></block><script><block s="doReport"><block s="reportRound"><block s="reportQuotient"><block s="reportDifference"><block var="value"/><l>364</l></block><l>0.64</l></block></block></block></script><script><block s="doIfElse"><block s="reportGreaterThan"><l>344</l><block var="value"/></block><script><block s="doReport"><block s="reportRound"><block s="reportQuotient"><block s="reportDifference"><block var="value"/><l>344</l></block><l>0.64</l></block></block></block></script><script><block s="doReport"><l>0</l></block></script></block></script></block></script></block></script><script><block s="doReport"><l>0</l></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 light" type="reporter" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 llum&#xD;es:$🅴-1.5-230-106-0 luz&#xD;</translations><inputs></inputs><script><block s="doIfElse"><block s="reportConnected"></block><script><block s="doReport"><block s="reportRound"><block s="reportQuotient"><block s="reportAnalogReading"><l>5</l></block><l>10.23</l></block></block></block></script><script><block s="doReport"><l>0</l></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 temperature (ºC)" type="reporter" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 temperatura (ºC)&#xD;es:$🅴-1.5-230-106-0 temperatura (ºC)&#xD;</translations><inputs></inputs><script><block s="doIfElse"><block s="reportConnected"></block><script><block s="doReport"><block s="reportQuotient"><block s="reportRound"><block s="reportQuotient"><block s="reportProduct"><l>5000</l><block s="reportAnalogReading"><l>6</l></block></block><l>1024</l></block></block><l>10</l></block></block></script><script><block s="doReport"><l>0</l></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 sound" type="reporter" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 so&#xD;es:$🅴-1.5-230-106-0 sonido&#xD;</translations><inputs></inputs><script><block s="doIfElse"><block s="reportConnected"></block><script><block s="doReport"><block s="reportRound"><block s="reportQuotient"><block s="reportAnalogReading"><l>7</l></block><l>10.23</l></block></block></block></script><script><block s="doReport"><l>0</l></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 mkmk %&apos;pin&apos; ?" type="predicate" category="arduino"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">A0<options>A0&#xD;A1&#xD;A2&#xD;A3&#xD;A4&#xD;A5&#xD;D2&#xD;D3</options></input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="doDeclareVariables"><list><l>pins</l><l>gpios</l></list></block><block s="doSetVar"><l>pins</l><block s="reportTextSplit"><l>A0 A1 A2 A3 A4 A5 D2 D3</l><l><option>word</option></l></block></block><block s="doSetVar"><l>gpios</l><block s="reportTextSplit"><l>14 15 16 17 18 19 2 3</l><l><option>word</option></l></block></block><block s="doIf"><block s="reportListContainsItem"><block var="pins"/><block var="pin"/></block><script><block s="doReport"><block s="reportDigitalReading"><block s="reportListItem"><block s="reportListIndex"><block var="pin"/><block var="pins"/></block><block var="gpios"/></block></block></block></script></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 set servo %&apos;pin&apos; to %&apos;state&apos;" type="command" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 posa el servo _ a _&#xD;es:$🅴-1.5-230-106-0 fijar servo _ a _&#xD;</translations><inputs><input type="%n" readonly="true">4<options>D4=4&#xD;D7=7&#xD;D8=8&#xD;A4=18</options></input><input type="%s">90<options>§_servoValues</options></input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="servoWrite"><block var="pin"/><block var="state"/></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 set digital pin %&apos;pin&apos; to %&apos;state&apos;" type="command" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 posa el pin digital _ a _&#xD;es:$🅴-1.5-230-106-0 fijar pin digital _ a _&#xD;</translations><inputs><input type="%n" readonly="true">4<options>D4=4&#xD;D7=7&#xD;D8=8&#xD;A4=18</options></input><input type="%b"></input></inputs><script><block s="doIf"><block s="reportConnected"></block><script><block s="digitalWrite"><block var="pin"/><block var="state"/></block></script></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 analog reading %&apos;pin&apos;" type="reporter" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 lectura analògica _&#xD;es:$🅴-1.5-230-106-0 lectura analógica _&#xD;</translations><inputs><input type="%n" readonly="true">4<options>A4=4</options></input></inputs><script><block s="doReport"><block s="reportAnalogReading"><block var="pin"/></block></block></script></block-definition><block-definition s="$🅴-1.5-230-106-0 digital reading %&apos;pin&apos;" type="predicate" category="arduino"><header></header><code></code><translations>ca:$🅴-1.5-230-106-0 lectura digital _&#xD;es:$🅴-1.5-230-106-0 lectura digital _&#xD;</translations><inputs><input type="%n" readonly="true">4<options>D4=4&#xD;D7=7&#xD;D8=8&#xD;A4=18</options></input></inputs><script><block s="doReport"><block s="reportDigitalReading"><block var="pin"/></block></block></script></block-definition></blocks>