<blocks app="Snap4Arduino 7.0.4
, http://snap4arduino.rocks" version="2"><block-definition s="$robot Tone pin %&apos;pin&apos; | %&apos;freq&apos; Hz %&apos;dur&apos; ms" type="command" category="arduino"><comment x="0" y="0" w="619.0000000000001" collapsed="false">Play sound of selected frequenzy (Hz) during a time (miliseconds value) using a buzzer on the selected pin.&#xD;&#xD;-Frequency. Accept values from 0 to 65535 Hz, but real operation range is 32-16000Hz.&#xD;-Duration. Accept values up to 60000ms.&#xD;-Default pin is 14 (A0), ready to Imagina shield.</comment><header></header><code></code><translations></translations><inputs><input type="%n">14</input><input type="%n">0</input><input type="%n">0</input></inputs><script><block s="doApplyExtension"><l>s4a_tone(pin, freq, dur)</l><list><block var="pin"/><block var="freq"/><block var="dur"/></list></block></script></block-definition><block-definition s="$robot pulseOut pin %&apos;pin&apos; | %&apos;stValue&apos; %&apos;time1&apos; %&apos;time2&apos; %&apos;time3&apos; µs" type="command" category="arduino"><comment x="0" y="0" w="573" collapsed="false">Sends a pulse (high or low) to the selected pin.&#xD;&#xD;- Times (in microseconds) for the pulse: initialStateTime, pulseTime, endingStateTime&#xD;- Times are 11 bits values: (0-2047 microseconds)</comment><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%txt" readonly="true">HIGH<options>HIGH&#xD;LOW</options></input><input type="%n"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doApplyExtension"><l>s4a_pulseOut(pin, stValue, time1, time2, time3)</l><list><block var="pin"/><block var="stValue"/><block var="time1"/><block var="time2"/><block var="time3"/></list></block></script></block-definition><block-definition s="$robot pulseIn (µs) pin %&apos;pin&apos; | %&apos;stValue&apos; timeout: %&apos;timeout&apos; µs" type="reporter" category="arduino"><comment x="0" y="0" w="777.9999999999999" collapsed="false">Return a pulse (either HIGH or LOW) on a pin in microseconds.&#xD;&#xD;Default timeout is 1 second (1000000 µs)</comment><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%txt" readonly="true">HIGH<options>HIGH&#xD;LOW</options></input><input type="%n"></input></inputs><script><block s="doApplyExtension"><l>s4a_pulseIn1(pin, stValue, timeout)</l><list><block var="pin"/><block var="stValue"/><block var="timeout"/></list></block><block s="doWaitUntil"><block s="reportApplyExtension"><l>s4a_pulseIn2(pin)</l><list><block var="pin"/></list></block></block><block s="doReport"><block s="reportApplyExtension"><l>s4a_pulseIn3(pin)</l><list><block var="pin"/></list></block></block></script></block-definition><block-definition s="$robot ping (cm) Trig %&apos;pinSen&apos; Echo %&apos;pinRec&apos; pulse %&apos;time1&apos; %&apos;time2&apos; µs" type="reporter" category="arduino"><comment x="0" y="0" w="658" collapsed="false">Return distance (in cm) from a Ultrasonic sensor.&#xD;&#xD;-Tested range from 3 up to 400 cm. Timeouts return 1000.&#xD;-You must select the connection pins (trigger and echo).&#xD;-You can modify trigger pulse. By default it sends a 5 µs pulse after 2µs in low state.&#xD;-Distance calculation assumes the speed of sound is 343m/s (value in dry air at 20ºC)</comment><header></header><code></code><translations></translations><inputs><input type="%n">4</input><input type="%n">2</input><input type="%n">2</input><input type="%n">5</input></inputs><script><block s="doApplyExtension"><l>s4a_ping1(pinRec, pinSen, time1, time2)</l><list><block var="pinRec"/><block var="pinSen"/><block var="time1"/><block var="time2"/></list></block><block s="doWaitUntil"><block s="reportApplyExtension"><l>s4a_ping2(pinRec)</l><list><block var="pinRec"/></list></block></block><block s="doReport"><block s="reportApplyExtension"><l>s4a_ping3(pinRec)</l><list><block var="pinRec"/></list></block></block></script></block-definition><block-definition s="$robot Nunchuk %&apos;opt&apos;" type="reporter" category="arduino"><comment x="0" y="0" w="472" collapsed="false">Return sensor values from a Nunchuk connected to I2C pins.&#xD;&#xD;-Sensors: Joystick (joyX and joyY), buttons ( butC and butZ) and accelerometers (accX, accY and accZ)&#xD;-Nunchuk I2C connection uses SCL, SDA, Ground and Vcc</comment><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true">joyX<options>joyX&#xD;joyY&#xD;butZ&#xD;butC&#xD;accX&#xD;accY&#xD;accZ</options></input></inputs><script><block s="doApplyExtension"><l>s4a_nunchuk1(command)</l><list><block var="opt"/></list></block><block s="doWaitUntil"><block s="reportApplyExtension"><l>s4a_nunchuk2(command)</l><list><block var="opt"/></list></block></block><block s="doReport"><block s="reportApplyExtension"><l>s4a_nunchuk3(command)</l><list><block var="opt"/></list></block></block></script></block-definition><block-definition s="$robot DHT11 %&apos;param&apos; on pin %&apos;pin&apos;" type="reporter" category="arduino"><comment x="0" y="0" w="381" collapsed="false">Return humidity/temperature (ºC) from DHT11 sensor connected on selected pin.</comment><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true">humidity<options>humidity&#xD;temperature</options></input><input type="%n">4</input></inputs><script><block s="doApplyExtension"><l>s4a_dht111(pin, param)</l><list><block var="pin"/><block var="param"/></list></block><block s="doWaitUntil"><block s="reportApplyExtension"><l>s4a_dht112(pin, param)</l><list><block var="pin"/><block var="param"/></list></block></block><block s="doReport"><block s="reportApplyExtension"><l>s4a_dht113(pin, param)</l><list><block var="pin"/><block var="param"/></list></block></block></script></block-definition><block-definition s="$robot IR %&apos;MESSAGE&apos; send by %&apos;CODER&apos;" type="command" category="arduino"><comment w="525" collapsed="false">Send IR signal (hexadecimal code) by IR emitter diode on pin 3, using Sony or RC5 protocol.&#xD;&#xD;You can send values from 0 to FFFFFF (6 hexadecimal digits).</comment><header></header><code></code><translations></translations><inputs><input type="%txt">FFFFFF</input><input type="%txt" readonly="true">Sony<options>Sony&#xD;RC5</options></input></inputs><script><block s="doApplyExtension"><l>s4a_irsend(message, coder)</l><list><block var="MESSAGE"/><block var="CODER"/></list></block></script></block-definition><block-definition s="$robot %&apos;ACTIVA&apos; IR rec" type="command" category="arduino"><comment w="460" collapsed="false">You can Enable/Disable IR receiver function.&#xD;&#xD;-Default state is disabled.&#xD;-Enabling action allows IR rec function and disables PWM function on pins 3 and 11.&#xD;-Disabling action turns on PWM function again on pins 3 and 11.</comment><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true">Enable<options>Enable&#xD;Disable</options></input></inputs><script><block s="doApplyExtension"><l>s4a_irenable(ac)</l><list><block var="ACTIVA"/></list></block></script></block-definition><block-definition s="$robot IR rec" type="reporter" category="arduino"><comment w="462" collapsed="false">Return IR code (hexadecimal) from IR receiver connected to pin 11.&#xD;&#xD;-You must &quot;Enable IR rec&quot; before. This action disables PWM function on pins 3 and 11.&#xD;-After using this receiver you can &quot;Disable IR rec&quot; to turn on PWM function on pins 3 and 11 again.</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doApplyExtension"><l>s4a_irread1()</l><list></list></block><block s="doWaitUntil"><block s="reportApplyExtension"><l>s4a_irread2()</l><list></list></block></block><block s="doReport"><block s="reportApplyExtension"><l>s4a_irread3()</l><list></list></block></block></script></block-definition></blocks>